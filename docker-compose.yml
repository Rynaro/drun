services:
  x-project-labels:
    com.docker.compose.project: ${PROJECT_NAME:-drun}
    
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: drun/rails:latest
    container_name: drun_app
    stdin_open: true
    tty: true
    ports:
      - "${PORT:-3000}:3000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-drun_development}
      POSTGRES_USER: ${POSTGRES_USER:-drun}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drun_secure}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      RAILS_ENV: ${RAILS_ENV:-development}
      BINDING: ${BINDING:-0.0.0.0}
    volumes:
      - .:/opt/app:cached
      - bundle_cache:/var/lib/bundle
      - node_modules_cache:/opt/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["./bin/rails", "server"]
    restart: unless-stopped

  postgres:
    image: postgres:17.5-alpine
    container_name: drun_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-drun_development}
      POSTGRES_USER: ${POSTGRES_USER:-drun}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drun_secure}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-drun} -d ${POSTGRES_DB:-drun_development}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:8-alpine
    container_name: drun_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  bundle_cache:
    driver: local
  node_modules_cache:
    driver: local
